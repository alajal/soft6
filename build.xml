<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="soft6" default="build">

    <!-- Definitions of variables used during the rest of this script -->
    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.classes.dir" value="${build.dir}/classes"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="dist.dir" value="${build.dir}/jar"/>
    <property name="conf.dir" value="${basedir}/etc"/>
    <property name="doc.dir" value="${build.dir}/doc"/>
    <property name="test.reports.dir" value="${build.dir}/reports/"/>
    <property name="main-class" value="ee.ut.math.tvt.soft6.Intro"/>
    <property name="team-name" value="soft6"/>

    <!-- Definitions of classpath variants used for different tasks -->
    <path id="compile.classpath">
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="run.classpath">
        <pathelement location="${build.classes.dir}"/>
        <!-- configuration -->
        <pathelement location="${conf.dir}"/>
        <!--/etc-->
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
    </path>

    <!-- Definitions of runnable ant targets.
         Run them from the command line by executing "ant [targetname]"  -->

    <target name="run" depends="build" description="Run the template application">
        <java classname="${main-class}" classpathref="run.classpath" fork="yes"/>
    </target>

    <target name="build" depends="clean" description="Build the system">
        <mkdir dir="${build.classes.dir}"/>
        <javac
                srcdir="${src.dir}"
                destdir="${build.classes.dir}"
                debug="true"
                debuglevel="lines,vars,source"
                encoding="utf-8"
                compiler="modern"
                target="1.7"
                source="1.7"
                includeantruntime="false">
            <classpath refid="compile.classpath"/>
        </javac>

    </target>

    <!-- Clean up build system results -->
    <target name="clean" description="Clean up build system results">
        <delete dir="${build.dir}"/>
    </target>

    <!--Creates the deployable jar file  -->
    <target name="dist" depends="build, increaseRevision">
        <mkdir dir="${dist.dir}"/>

        <jar destfile="${dist.dir}/${team-name}.jar"
             basedir="${build.classes.dir}"><!-- loome jar faili dist'i sisse, olemas on juba class failid, lisame muud, selleks defineerime need filesetis -->
            <fileset
                    dir="${conf.dir}">  <!-- valik faile / etc kausta nimi, sest sealt hakkame võtma teisi faile, mitte basedir'ist-->
                <include name="*"/>
                <!-- tahame etc directory seest asju, mitte etc'd ennast (oleme juba etc dierctorys vt. fileseti parameetrit) -->
            </fileset>
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
        </jar>
    </target>


    <target name="jrun" depends="dist" description="Opens intro window using the JAR file">
        <java fork="yes"
              classname="${main-class}">  <!--paneb Java programmi tööle, ülejäänud asjad on selle parameetrid -->
            <classpath>
                <path location="${dist.dir}/${team-name}.jar"/>
                <path>
                    <fileset dir="lib">
                        <include name="*.jar"/>
                    </fileset>
                </path>
            </classpath>
        </java>
    </target>

    <target name="increaseRevision" description="Increase revision and update version.properties.">
        <propertyfile file="${conf.dir}/version.properties" comment="Version properties">
            <!-- increases revision number by 1 -->
            <entry key="build.revision.number" type="int" default="0" value="1" operation="+"/>
        </propertyfile>

        <!-- absolutely no idea why this is needed, doesn't work otherwise -->
        <property file="${conf.dir}/version.properties"/>

        <propertyfile file="${conf.dir}/version.properties">
            <!-- updates build number -->
            <entry key="build.number" value="${build.major.number}.${build.minor.number}.${build.revision.number}"/>
        </propertyfile>


    </target>


</project>